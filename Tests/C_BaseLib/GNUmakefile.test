#
# $Id: GNUmakefile.test,v 1.4 1998-03-26 22:24:18 marc Exp $
#

#
# Set these to the appropriate place.
#
GUTHAMR_HOME = ..
COMP         = KCC
DIM          = 2
PRECISION    = DOUBLE
DEBUG        = TRUE
USE_BSP      = TRUE

PBOXLIB_HOME = ..
include $(GUTHAMR_HOME)/mk/Make.defs

#
# What is the type of the BSP device?
#
ifeq ($(USE_BSP),TRUE)
BSP_DEVICE = SHMEM_SYSV
endif

LIBRARIES += -lbox$(optionsSuffix)

#
# BSP parallel locations
#
ifeq ($(USE_BSP),TRUE)
DEFINES += -DBL_USE_BSP
BSP_HOME = /usr/people/vince/Parallel/BSP/BSP
INCLUDE_LOCATIONS += $(BSP_HOME)/include
LIBRARY_LOCATIONS += $(BSP_HOME)/lib/OSF1
LIBRARY_LOCATIONS += $(BSP_HOME)/lib/OSF1/$(BSP_DEVICE)
LIBRARIES += -lbspcore_O0 -lbsplevel1_O0
#LIBRARIES += -lbspcore_O2 -lbsplevel1_O0
#
# exception library (for newest bsplib)
#
LIBRARY_LOCATIONS += /usr/ccs/lib/cmplrs/cc
LIBRARIES += -lexc
endif

#
# Base name of each of the executables we want to build.
# I'm assuming that each of these is a stand-alone program,
# that simply needs to link against BoxLib.
#
_progs = tVisMF tDir

all: $(addsuffix $(optionsSuffix).ex, $(_progs))

VPATH = ../pBoxLib_2:$(GUTHAMR_HOME)/lib

$(addsuffix $(optionsSuffix).ex, $(_progs)) \
   : %$(optionsSuffix).ex : %.cpp -lbox$(optionsSuffix)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@ $< $(libraries)
	$(RM) $@.o

#
# Run the tests ...
#
runtests : $(addsuffix $(optionsSuffix).ex, $(_progs))
        #
        # 
        #
	for f in $(filter-out tFABiofilt%,                 \
          $(addsuffix $(optionsSuffix).ex, $(_progs))); do \
          echo "====> Testing $$f ..."; echo; ./$$f; echo; \
        done

include $(GUTHAMR_HOME)/mk/Make.rules
