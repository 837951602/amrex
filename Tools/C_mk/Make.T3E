
CPP = cpp

ifeq ($(COMP),CC)
CXX := CC -h instantiate=local
endif

ifeq ($(COMP),KCC)
CXX := KCC
endif

ifeq ($(COMP),CFRONT)
CXX	          := OCC
override XTRADEFS += -DBL_BUG_DEFARG
OUTPUT_OPTION	   =  ; mv $*.o $@
endif

ifeq ($(COMP),CC)
CXXOPTF += -O2 -h new_for_init
CXXDEBF += -g -h new_for_init
override XTRADEFS += -DBL_USE_SETBUF -DBL_SETBUF_SIGNED_CHAR
endif

ifeq ($(COMP),KCC)
CXXOPTF += -O2
CXXDEBF += -g
endif

ifeq ($(PROFILE), TRUE)
CXXPRFF	 += -happrentice
XTRALIBS += -lapp
endif

FC     = f90 -N 80 -e I
FOPTF += -O,aggress,pipeline2,vector3,split0 -apad
FDEBF += -g
FPRFF += -eA

COPTF += -O2
CDEBF += -g
CPRFF +=

BSP_DEVICE = DRMA_SHMEM
BSP_MACHINE = CRAYT3E

ifeq ($(COMP),CC)
#
# Uncomment this line if filebuf::setbuf() is a public member function
# in your C++ I/O library implementation so that constructs of the following
# form are legal:
#
#    os.rdbuf()->setbuf(buffer, buffer_size);
#
# this is a big win on the T3E -- vince
DEFINES += -DBL_USE_SETBUF
endif

OUTPUT_OPTION	= ; mv $*.o $(objTempDir)/$*.o

FORTPREP	= perl ../scripts/strip72 -c
FORT_OUTPUT_OPTION	= ; mv $*.o $(objTempDir)/$*.o
FORTLINK	= UPPERCASE
